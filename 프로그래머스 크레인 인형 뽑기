import java.util.*;

class Solution {
    public int solution(int[][] board, int[] moves) {
        
        int count = 0;
        Stack<Integer> stack = new Stack<>();       
        
        for(int i =0;i<moves.length;i++){
            for(int j=0;j<board.length;j++){
                if(board[j][moves[i]-1] != 0 ) {                   
                    if(!stack.empty() && stack.peek() == board[j][moves[i]-1]){
                        
                        stack.pop();
                        count= count+2;
                    
                        board[j][moves[i]-1] = 0;
                        break;    
                    }else{
                        stack.push(board[j][moves[i]-1]);                      
                        board[j][moves[i]-1] = 0;
                        break;
                    }
                }                        
            }
        }
        
        return count;
    }
}
// board 에서 뽑히면 0으로 만들어버리고 
//stack 에 저장 , 저장된 스택이 연속해서 같으면 count ++ 
//

// moves : 1 5 3 5 1 2 1 4 

// 0 0 0 0 0
// 0 0 1 0 3
// 0 2 5 0 1
// 4 2 4 4 2
// 3 5 1 3 1 
    
    
  
    
    
    
    
