import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class test9 {
	
	static int m,n,k;
	static int[][] graph;
	static boolean[][] visited;
	static int count;
	static int[] dx = {-1,1,0,0};
	static int[] dy = {0,0,-1,1};

	static void dfs(int x, int y){
		visited[x][y] = true;
		
		for(int i=0;i<4;i++){
			int nx = x+dx[i];
			int ny = y+dy[i];
			
			if(nx >= 0 && ny>=0 && nx <m && ny < n){
				if(graph[nx][ny] == 1 && !visited[nx][ny]){
					dfs(nx,ny);
				}
			}
			
		}
	
	}
	
	
	public static void main(String[] args) throws IOException{
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		
		
		for(int i=0;i<T;i++){
			count =0;
		String temp = br.readLine();
		
		StringTokenizer st = new StringTokenizer(temp," ");
		m = Integer.parseInt(st.nextToken());
		n = Integer.parseInt(st.nextToken());
		k = Integer.parseInt(st.nextToken());
		graph = new int[m][n];
		visited = new boolean[m][n];
		
		
		
			for(int j=0;j<k;j++){
				st = new StringTokenizer(br.readLine()," ");
				int temp1 = Integer.parseInt(st.nextToken());
				int temp2 = Integer.parseInt(st.nextToken());
				graph[temp1][temp2] =1;
				
			}
		
			for(int x =0;x <m;x++){
				for(int y=0;y<n;y++){
					if(graph[x][y] ==1 && !visited[x][y]){
						dfs(x,y);
						count++;
					}
				}
			}
			
			System.out.println(count);
		
		}//T
		
		
	
	}//main

}
